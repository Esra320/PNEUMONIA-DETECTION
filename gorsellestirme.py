# -*- coding: utf-8 -*-
"""Gorsellestirme.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1VBCnX9ZAufdHvJFs0Qu3Fa3lf90QNINv

Modelin Katmanları
"""

import keras
from keras.models import Sequential
from keras.layers import Conv2D, MaxPooling2D, Flatten, Dense, Dropout

batchSize = 40                  # Tek seferde 40 veri alacağız.
classes = 2                     # Normal ve Pneumonia şeklinde 2 sınıf
epoch = 15                      # 15 epoch'ta tekrarda eğitimi tamamlayağız
dataSize = [0,224,224,1]        # Eğitim için verinin boyutları alındı.
imgRow, imgCol, channel = dataSize[1], dataSize[2], dataSize[3]

model = Sequential()

# 3x3 boyutunda 32 adet filtreden oluşan ReLU aktivasyonlu CONV katmanı eklendi. 
model.add(Conv2D(32, kernel_size=(3, 3),
                 activation='relu',
                 input_shape=(imgRow,imgCol,1)))

# 3x3 boyutunda 64 adet filtreden oluşan ReLU aktivasyonlu CONV katmanı eklendi. 
model.add(Conv2D(64, (3, 3), activation='relu'))

# 2x2 boyutlu çerçeveden oluşan MAXPOOL katmanı eklendi. 
model.add(MaxPooling2D(pool_size=(2, 2)))

# her seferinde nöronların %25'i atıldı (drop)
model.add(Dropout(0.25))

# Tam bağlantılı (fully connected) katmanına geçiş olacağı için düzleştirme yapıldı. 
model.add(Flatten())

# 128 nörondan oluşan ReLU aktivasyonu FC katmanı eklendi 
model.add(Dense(128, activation='relu'))

# Her seferinde %50'i atıldı (drop)
model.add(Dropout(0.5))

# Çıkış katmanına sınıf sayısı kadar Softmax aktivasyonlu nöron eklendi
model.add(Dense(classes, activation='softmax'))

from keras.utils.vis_utils import plot_model
plot_model(model, to_file='model.png', show_shapes=True, show_layer_names=True)
plot_model(model,show_shapes=True)

model.summary()

model = Sequential()

# 3x3 boyutunda 32 adet filtreden oluşan ReLU aktivasyonlu CONV katmanı eklendi. 
model.add(Conv2D(32, kernel_size=(3, 3),
                 activation='relu',
                 input_shape=(imgRow,imgCol,1)))

# 3x3 boyutunda 64 adet filtreden oluşan ReLU aktivasyonlu CONV katmanı eklendi. 
model.add(Conv2D(64, (3, 3), activation='relu'))

# 2x2 boyutlu çerçeveden oluşan MAXPOOL katmanı eklendi. 
model.add(MaxPooling2D(pool_size=(2, 2)))

# her seferinde nöronların %25'i atıldı (drop)
model.add(Dropout(0.25))
model.add(Conv2D(128, (3,3),activation='relu'))
model.add(Conv2D(256, (3,3),activation='relu'))
model.add(MaxPooling2D(pool_size=(2,2)))
# Tam bağlantılı (fully connected) katmanına geçiş olacağı için düzleştirme yapıldı. 
model.add(Flatten())

# 128 nörondan oluşan ReLU aktivasyonu FC katmanı eklendi 
model.add(Dense(128, activation='relu'))

# Her seferinde %50'i atıldı (drop)
model.add(Dropout(0.5))

# Çıkış katmanına sınıf sayısı kadar Softmax aktivasyonlu nöron eklendi
model.add(Dense(classes, activation='softmax'))

from keras.utils.vis_utils import plot_model
plot_model(model, to_file='model.png', show_shapes=True, show_layer_names=True)
plot_model(model,show_shapes=True)

model.summary()